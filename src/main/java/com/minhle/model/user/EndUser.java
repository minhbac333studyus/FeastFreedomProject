package com.minhle.model.user; 
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.UUID;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size; 
import org.hibernate.validator.constraints.UniqueElements;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Component; 
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTypeConverted;
import com.minhle.model.kitchen.Item;
import com.minhle.model.kitchen.Order;

import lombok.Data;
 

@DynamoDBTable(tableName = "EndUser") 
@Component
@Data
public class EndUser    {

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
	private String id;
    
    @DynamoDBAttribute(attributeName = "User_Name")
    @NotNull
    @Size(max = 50) 
    private String name; 
    
	@DynamoDBAttribute(attributeName = "Email")
    @Email
    @NotNull
    @Size(max = 50)
 
	private String email;
	
    @DynamoDBAttribute(attributeName = "Password")
    @NotNull
    @Size(min = 10,max = 50) 
	private String password; 
    
 
    
//    @DynamoDBAttribute(attributeName = "OrderHistory")
//    private ArrayList<Order> orderHistory;
//    
    @DynamoDBAttribute(attributeName = "TemporaryOder")
    private String temporaryOrder;
   
   
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return name+ " "+ email + " " + password + temporaryOrder ;
	}
	public EndUser() { 
		this.name = "Empty";
		this.email = "Empty";
		this.password = "Empty";
		this.temporaryOrder = new Order().toString();  
	} 
	public EndUser(  @NotNull @Size(max = 50) @UniqueElements String name,
			@Email @NotNull @Size(max = 50) @UniqueElements String email,
			@NotNull @Size(min = 10, max = 50) String password ) {
		super();
	 
		this.name = name;
		this.email = email;
		this.password = password; 
		Order or = new Order();
		or.setUserEmail(email);
		this.temporaryOrder = or.toString();
		 
	}
	public EndUser(@NotNull @Size(max = 50) String name, @Email @NotNull @Size(max = 50) String email,
			@NotNull @Size(min = 10, max = 50) String password, String temporaryOrder) {
		super();
		this.name = name;
		this.email = email;
		this.password = password;
		this.temporaryOrder = temporaryOrder;
		 
	}
	
	 
}

 
